1.校验和校验
DLLEXPORT int __stdcall MsSqlCheckSum(char *buf, int size)

2.残缺页校验
DLLEXPORT int __stdcall MsSqlIncomplete(char *buf, int size)

返回值：成功返回1，否则0
注：内部不进行校验类型校验判断



#include <stdio.h>

typedef unsigned int u32;
typedef unsigned short u16;

#define DLLEXPORT extern "C" __declspec(dllexport)

//循环移动
static __inline u32 CycleMove(u32 Num, u16 ct/*移动位数*/)
{
	u32 tmp = 0;

	tmp = Num>>(32-ct);
	Num = Num<<ct;
	Num |= tmp;

	return Num;
}

DLLEXPORT int __stdcall MsSqlCheckSum(char *buf, int size)
{
	u32 CheckValue = 0, tmp = 0, BlckupValue = 0;

	if(buf)
	{
		 
		BlckupValue = *(u32*)(buf+0x3c);  //获取校验值
		*(u32*)(buf+0x3c) = 0;  //清空校验值
		//开始校验
		for(u32 i = 0; i < size; i += 4)
		{
			tmp = *(u32*)(buf + i);
			tmp = CycleMove(tmp, 15-i/512);
			CheckValue ^= tmp;
		}
		return CheckValue == BlckupValue?1:0;
	}
	else
		return 0;
}

DLLEXPORT int __stdcall MsSqlIncomplete(char *buf, int size)
{
	char VerBit = 0, RealBit = 0;
	u32 CheckValue = 0;

	if(buf)
	{
		//获取校验值
		CheckValue = *(u32*)(buf+0x3c);
		VerBit = CheckValue & 0x00000003; 
		//开始校验
		for(u32 loop = 1023, BitLoop = 2; loop <= size && BitLoop < 32; loop += 512, BitLoop += 2)
		{
			if((buf[loop] & VerBit) != VerBit) 
				return 0;   //校验失败

			RealBit = CheckValue >> BitLoop & 0x00000003;
			buf[loop] &= 0xfc;
			buf[loop] |= RealBit;
		}
	}
	else
		return 0;

	return 1;
}
